{"version":3,"sources":["StructureSample/pages/SignIn.js","StructureSample/atoms/DateHeader.js","StructureSample/molecules/CalendarTask.js","StructureSample/molecules/Month.js","StructureSample/molecules/TaskInformation.js","StructureSample/pages/Calendar.js","StructureSample/pages/Timer.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","week","DateHeader","incommingDate","isDateVisible","date","Date","zmienna","getDay","currentDay","getDate","weekDays","i","className","map","elem","index","CalendarTask","task","title","startHour","endHour","description","Day","day","Month","now","numberOfDays","getFullYear","getMonth","emptyArray","TaskInformation","tags","split","status","src","imgCreator","height","imgAssign","href","Filter","Calendar","dateCalendar","FiltrS","PlayStop","TimerCurrent","tasks","TimerTask","TimerWeek","Timer","view","inputDate","task1","taskClass","allTasks","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAsBeA,ICjBTC,EAAO,CACX,SACA,UACA,YACA,WACA,SACA,WACA,UA0BaC,MAvBf,YAQE,IARqD,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,cAC7BC,EAAO,IAAIC,KAAKH,GAEhBI,GAAWF,EAAKG,SAAW,GAAK,EAChCC,EAAaJ,EAAKK,UAAYH,EAG9BI,EAAW,GACRC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAASC,GAAKH,EAAaG,EAE7B,OACE,yBAAKC,UAAU,kBACZF,EAASG,KAAI,SAACC,EAAMC,GAAP,OACZ,yBAAKH,UAAU,yBACb,uBAAGA,UAAU,aAAaZ,EAAKe,IAC9BZ,GAAiB,2BAAIW,EAAJ,aCNbE,MAdf,YAAiC,IAATC,EAAQ,EAARA,KACtB,OACE,oCACE,yBAAKL,UAAW,gBACd,2BAAIK,EAAKC,OACT,2BACGD,EAAKE,UADR,IACoBF,EAAKG,SAEzB,2BAAIH,EAAKI,gBCbjB,SAASC,EAAT,GAAuB,IAARC,EAAO,EAAPA,IACb,OACE,oCACE,uBAAGX,UAAW,2BAAd,QAA+CW,IAyBtCC,MApBf,YASE,IATwB,IAATpB,EAAQ,EAARA,KACTqB,EAAM,IAAIpB,KAAKD,GACfsB,EAAe,IAAIrB,KACvBoB,EAAIE,cACJF,EAAIG,WAAa,EACjB,GACAnB,UACIoB,EAAa,GAEVlB,EAAI,EAAGA,EAAIe,EAAcf,IAChCkB,EAAWlB,GAAK,kBAACW,EAAD,CAAKC,IAAKZ,EAAI,IAEhC,OACE,oCACE,kBAAC,EAAD,CAAYT,cAAe,CAAC,KAAM,GAAI,IAAKC,eAAe,IAC1D,yBAAKS,UAAW,uBAAwBiB,KCe/BC,MAlCf,YAAoC,IAATb,EAAQ,EAARA,KACnBc,EAAOd,EAAKc,KAAKC,MAAM,KAC7B,OACE,yBAAKpB,UAAW,2BACd,yBAAKA,UAAW,eACd,4BAAKK,EAAKC,OACV,6BACE,wCACA,4CAGJ,6BACE,gCAASD,EAAKgB,OAAd,MAEA,2BACGhB,EAAKE,UADR,IACoBF,EAAKG,SAEzB,6BACE,yBAAKc,IAAKjB,EAAKkB,WAAYC,OAAO,OAClC,yBAAKF,IAAKjB,EAAKoB,UAAWD,OAAO,QAEnC,6BACE,qCACCL,EAAKlB,KAAI,SAAAC,GAAI,OACZ,uBAAGwB,KAAK,KAAR,IAAcxB,EAAd,QAEF,uCAEF,2BAAIG,EAAKI,gBC3BjB,SAASkB,IACP,OAAO,0CAyBMC,MAtBf,YAAqC,IAAjBC,EAAgB,EAAhBA,aAClB,OACE,oCACE,wCACA,6BACE,uCACA,wCACA,0CAEF,kBAACF,EAAD,MACA,yBAAK3B,UAAW,mBACd,4BAAQA,UAAW,aAAnB,aACA,yBAAKA,UAAW,kBACd,kBAAC,EAAD,CAAOR,KAAMqC,KAGf,4BAAQ7B,UAAW,aAAnB,WCfR,SAAS8B,IACP,OAAO,0CAGT,SAASC,IACP,OAAO,qDAGT,SAASC,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACtB,OACE,oCACE,qCACA,2CACA,wCACA,kBAACH,EAAD,MACCG,EAAMhC,KAAI,SAAAI,GACT,OACE,6BACE,2BAAIA,EAAKC,OACT,2BAAID,EAAKI,aACT,kBAACsB,EAAD,MACA,yCAQZ,SAASG,EAAT,GAA8B,IAAT7B,EAAQ,EAARA,KACnB,OACE,oCACE,yBAAKL,UAAW,wBACd,uBAAGA,UAAW,YAAaK,EAAKC,OAChC,uBAAGN,UAAW,YAAaK,EAAKI,aAChC,yBAAKT,UAAW,mBACd,uBAAGA,UAAW,kBAAd,SACA,uBAAGA,UAAW,kBAAd,SACA,uBAAGA,UAAW,kBAAd,SACA,uBAAGA,UAAW,kBAAd,SACA,uBAAGA,UAAW,kBAAd,SACA,uBAAGA,UAAW,kBAAd,YAOV,SAASmC,EAAT,GAA+B,IAAVF,EAAS,EAATA,MACnB,OACE,oCACE,qCAEA,2CACA,wCACA,kBAACH,EAAD,MACA,yBAAK9B,UAAW,0BACd,+CACA,kBAAC,EAAD,CAAYV,cAAe,CAAC,KAAM,GAAI,IAAKC,eAAe,KAE5D,6BACG0C,EAAMhC,KAAI,SAAAI,GACT,OAAO,kBAAC6B,EAAD,CAAW7B,KAAMA,QAG5B,yBAAKL,UAAW,wBACd,qCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,sCAkBOoC,MAZf,YAAiC,IAAhBH,EAAe,EAAfA,MAAOI,EAAQ,EAARA,KACtB,OACE,oCACY,SAATA,EACC,kBAACF,EAAD,CAAWF,MAAOA,IAElB,kBAACD,EAAD,CAAcC,MAAOA,MC1FvBK,EAAY,CAAC,KAAM,GAAI,IACvBC,EAAQ,CACZ9B,YAAa,uCACbD,QAAS,QACTiB,UACE,yJAEFF,WACE,wJACFhB,UAAW,QACXc,OAAQ,mBACRF,KAAM,kCACNqB,UAAW,aACXlC,MAAO,eAiBHmC,EAAW,CAACF,EAfJ,CACZ9B,YAAa,8BACbD,QAAS,QACTiB,UACE,yJAEFF,WACE,wJACFhB,UAAW,QACXc,OAAQ,WACRF,KAAM,kCACNqB,UAAW,aACXlC,MAAO,gBA0BMoC,MApBf,WAGE,OACE,yBAAK1C,UAAU,OACb,kBAAC,EAAD,CAAYV,cAAegD,EAAW/C,eAAe,IACrD,6BACA,kBAAC,EAAD,CAAcc,KAAMkC,IACpB,6BACA,kBAAC,EAAD,CAAO/C,KAAM,eACb,6BACA,kBAAC,EAAD,CAAiBa,KAAMkC,IACvB,6BACA,kBAAC,EAAD,CAAUV,aAAc,eACxB,6BACA,kBAAC,EAAD,CAAOI,MAAOQ,EAAUJ,KAAM,WC/ChBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e4896051.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"../atoms/Button\";\r\n\r\nconst style = {\r\n  backgroundColor: \"red\",\r\n};\r\n\r\nfunction SignIn({ username, password }) {\r\n  return (\r\n    <div>\r\n      To jest komponent logowania\r\n      <p>{username}</p>\r\n      <p>{password}</p>\r\n      <Button\r\n        text=\"zaloguj się\"\r\n        onClickHandler={() => console.log(\"zaloguj się\")}\r\n        style={style}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","//Header: \"task description\" + \"Mon(15th) Tue(16th) Wed(17th) ....\"\r\n\r\nimport React from \"react\";\r\nimport \"../styleAnia.css\";\r\n\r\nconst week = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\nfunction DateHeader({ incommingDate, isDateVisible }) {\r\n  const date = new Date(incommingDate);\r\n  //   console.log(date.getDate(), date.getDay());\r\n  const zmienna = (date.getDay() + 6) % 7;\r\n  const currentDay = date.getDate() - zmienna;\r\n\r\n  // unworking for biggining & ending month\r\n  const weekDays = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    weekDays[i] = currentDay + i;\r\n  }\r\n  return (\r\n    <div className=\"displayFLexRow\">\r\n      {weekDays.map((elem, index) => (\r\n        <div className=\"margin widthProcent12\">\r\n          <p className=\"underline\">{week[index]}</p>\r\n          {isDateVisible && <p>{elem} th</p>}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateHeader;\r\n","//color by tags\r\n//color by priority\r\n//data start\r\n\r\n//Name of task\r\n//hours range\r\n\r\n//Header: \"task description\" + \"Mon(15th) Tue(16th) Wed(17th) ....\"\r\n\r\nimport React from \"react\";\r\n\r\nfunction CalendarTask({ task }) {\r\n  return (\r\n    <>\r\n      <div className={\"calendarTask\"}>\r\n        <p>{task.title}</p>\r\n        <p>\r\n          {task.startHour}-{task.endHour}\r\n        </p>\r\n        <p>{task.description}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CalendarTask;\r\n","//Months name\r\n//all weeks for the months?\r\n\r\nimport React from \"react\";\r\nimport DateHeader from \"../atoms/DateHeader\";\r\n\r\nfunction Day({ day }) {\r\n  return (\r\n    <>\r\n      <p className={\"widthProcent12 height75\"}> Day {day}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Month({ date }) {\r\n  const now = new Date(date);\r\n  const numberOfDays = new Date(\r\n    now.getFullYear(),\r\n    now.getMonth() + 1,\r\n    0\r\n  ).getDate();\r\n  const emptyArray = [];\r\n\r\n  for (let i = 0; i < numberOfDays; i++) {\r\n    emptyArray[i] = <Day day={i + 1} />;\r\n  }\r\n  return (\r\n    <>\r\n      <DateHeader incommingDate={[2020, 10, 13]} isDateVisible={false} />\r\n      <div className={\"displayFLexRow wrap\"}>{emptyArray}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Month;\r\n","// Task name\r\n//Status -> when click you can change status (radioInput)\r\n//Img > Img -> first img(creator task), second(assign person)\r\n//Type -> when click you can change tags (checkbox)\r\n//duration....\r\n//.....\r\n//.....\r\n\r\nimport React from \"react\";\r\n\r\nfunction TaskInformation({ task }) {\r\n  const tags = task.tags.split(\" \");\r\n  return (\r\n    <div className={\"calendarTaskInformation\"}>\r\n      <div className={\"displayTask\"}>\r\n        <h2>{task.title}</h2>\r\n        <div>\r\n          <button>edit</button>\r\n          <button>remove</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button>{task.status} v</button>\r\n        {/* onClick more & less options to pick and chanhe status */}\r\n        <p>\r\n          {task.startHour}-{task.endHour}\r\n        </p>\r\n        <div>\r\n          <img src={task.imgCreator} height=\"50\" />\r\n          <img src={task.imgAssign} height=\"50\" />\r\n        </div>\r\n        <div>\r\n          <h3>Tags:</h3>\r\n          {tags.map(elem => (\r\n            <a href=\"#\"> {elem} </a>\r\n          ))}\r\n          <button> +</button>\r\n        </div>\r\n        <p>{task.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskInformation;\r\n","//h2 -> calendar\r\n// 3x button -> Day, Week, Month\r\n//Filter\r\n//button previous\r\n//Calendar header -> monday(15th), tuesday(16th), wednesday(17th).....\r\n//button next\r\n//Calendar -> compose of components day, week, month\r\n\r\nimport React from \"react\";\r\nimport Month from \"../molecules/Month\";\r\n\r\nfunction Filter() {\r\n  return <button>Filter</button>;\r\n}\r\n\r\nfunction Calendar({ dateCalendar }) {\r\n  return (\r\n    <>\r\n      <h2>Calendar</h2>\r\n      <div>\r\n        <button>Day</button>\r\n        <button>Week</button>\r\n        <button>Month</button>\r\n      </div>\r\n      <Filter />\r\n      <div className={\"displayFLexRow2\"}>\r\n        <button className={\"marginTop\"}>Previous </button>\r\n        <div className={\"widthProcent80\"}>\r\n          <Month date={dateCalendar} />\r\n          {/*zamiennie później z <Day/> & <Week/>*/}\r\n        </div>\r\n        <button className={\"marginTop\"}>Next</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","// FilterS\r\n//2xButtons -> current, weeks view\r\n\r\n//TimerCurrent\r\n//all active task with PlayStop.js Component\r\n//Time counter\r\n// Maybe like AsideTimer???\r\n\r\n//TimerWeek\r\n//DataHeader.js\r\n//99999xTimerTask\r\n// Total time counter for each day\r\n\r\nimport React from \"react\";\r\nimport DateHeader from \"../atoms/DateHeader\";\r\n\r\nfunction FiltrS() {\r\n  return <button>FiltrS</button>;\r\n}\r\n\r\nfunction PlayStop() {\r\n  return <button>PlayStopComponent</button>;\r\n}\r\n\r\nfunction TimerCurrent({ tasks }) {\r\n  return (\r\n    <>\r\n      <h2>Timer</h2>\r\n      <button>Current</button>\r\n      <button>Week</button>\r\n      <FiltrS />\r\n      {tasks.map(task => {\r\n        return (\r\n          <div>\r\n            <p>{task.title}</p>\r\n            <p>{task.description}</p>\r\n            <PlayStop />\r\n            <p>04:20</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TimerTask({ task }) {\r\n  return (\r\n    <>\r\n      <div className={\"displayTimerWeekTask\"}>\r\n        <p className={\"width100\"}>{task.title}</p>\r\n        <p className={\"width100\"}>{task.description}</p>\r\n        <div className={\"displayFlexHour\"}>\r\n          <p className={\"widthProcent12\"}>04:20</p>\r\n          <p className={\"widthProcent12\"}>04:20</p>\r\n          <p className={\"widthProcent12\"}>04:20</p>\r\n          <p className={\"widthProcent12\"}>04:20</p>\r\n          <p className={\"widthProcent12\"}>04:20</p>\r\n          <p className={\"widthProcent12\"}>04:20</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TimerWeek({ tasks }) {\r\n  return (\r\n    <>\r\n      <h2>Timer</h2>\r\n\r\n      <button>Current</button>\r\n      <button>Week</button>\r\n      <FiltrS />\r\n      <div className={\"displayTimerWeekHeader\"}>\r\n        <p>Task description</p>\r\n        <DateHeader incommingDate={[2020, 10, 13]} isDateVisible={false} />\r\n      </div>\r\n      <div>\r\n        {tasks.map(task => {\r\n          return <TimerTask task={task} />;\r\n        })}\r\n      </div>\r\n      <div className={\"displayFlexHourTotal\"}>\r\n        <p>Total:</p>\r\n        <p>04:20</p>\r\n        <p>04:20</p>\r\n        <p>04:20</p>\r\n        <p>04:20</p>\r\n        <p>04:20</p>\r\n        <p>04:20</p>\r\n        <p>04:20</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Timer({ tasks, view }) {\r\n  return (\r\n    <>\r\n      {view === \"week\" ? (\r\n        <TimerWeek tasks={tasks} />\r\n      ) : (\r\n        <TimerCurrent tasks={tasks} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport SignIn from \"./StructureSample/pages/SignIn\";\r\nimport DateHeader from \"./StructureSample/atoms/DateHeader\";\r\nimport CalendarTask from \"./StructureSample/molecules/CalendarTask\";\r\nimport Month from \"./StructureSample/molecules/Month\";\r\nimport TaskInformation from \"./StructureSample/molecules/TaskInformation\";\r\nimport Calendar from \"./StructureSample/pages/Calendar\";\r\nimport Timer from \"./StructureSample/pages/Timer\";\r\n\r\n//testing variables\r\nconst inputDate = [2020, 10, 13];\r\nconst task1 = {\r\n  description: \"testowe zadanie do wyświetlenia\",\r\n  endHour: \"14.30\",\r\n  imgAssign:\r\n    \"https://banner2.cleanpng.com/20180706/zj/kisspng-face-with-tears-of-joy-emoji-sticker-clip-art-ty-dolla-sign-5b3f40ac3b08f8.5391494415308719802418.jpg\",\r\n\r\n  imgCreator:\r\n    \"https://banner2.cleanpng.com/20180623/qeh/kisspng-face-with-tears-of-joy-emoji-sticker-crying-emotic-plexus-5b2e08363a6521.8651402915297434142392.jpg\",\r\n  startHour: \"12.00\",\r\n  status: \"Status: new task\",\r\n  tags: \"praca nuda coś tam jeszcze\",\r\n  taskClass: \"task1Class\",\r\n  title: \"Zadanie nr1\",\r\n};\r\nconst task2 = {\r\n  description: \"description for Zadanie nr2\",\r\n  endHour: \"16.00\",\r\n  imgAssign:\r\n    \"https://banner2.cleanpng.com/20180706/zj/kisspng-face-with-tears-of-joy-emoji-sticker-clip-art-ty-dolla-sign-5b3f40ac3b08f8.5391494415308719802418.jpg\",\r\n\r\n  imgCreator:\r\n    \"https://banner2.cleanpng.com/20180623/qeh/kisspng-face-with-tears-of-joy-emoji-sticker-crying-emotic-plexus-5b2e08363a6521.8651402915297434142392.jpg\",\r\n  startHour: \"12.00\",\r\n  status: \"new task\",\r\n  tags: \"praca nuda coś tam jeszcze\",\r\n  taskClass: \"task1Class\",\r\n  title: \"Zadanie nr2\",\r\n};\r\n\r\nconst allTasks = [task1, task2];\r\n\r\n// end of testing variables\r\nfunction App() {\r\n  const username = \"Janek\";\r\n  const password = \"password\";\r\n  return (\r\n    <div className=\"App\">\r\n      <DateHeader incommingDate={inputDate} isDateVisible={true} />\r\n      <hr />\r\n      <CalendarTask task={task1} />\r\n      <hr />\r\n      <Month date={\"2020 02 13\"} />\r\n      <hr />\r\n      <TaskInformation task={task1} />\r\n      <hr />\r\n      <Calendar dateCalendar={\"2020 02 13\"} />\r\n      <hr />\r\n      <Timer tasks={allTasks} view={\"week\"} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}